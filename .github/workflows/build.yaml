name: Build Nodejs frontend and deploy to AWS S3
run-name: ${{ github.actor }} is running GitHub Actions workflow
on:
  push:
    branches:
      - 'CB**'
      - main
      - uat
      - prod

  pull_request:
    branches:
      - main
      - uat
      - prod
    types:
      - opened
      - reopened
      - synchronize

  workflow_dispatch:
    inputs:
      environment:
        description: 'Please select the environment on which to run:'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - uat
          - prod
env:
  CI: false
concurrency:
  group: ${{ github.ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

      - name: Cache node-modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Checking code format, testing the code.
        run: |
          npm install
          npm run lint
          npm run test

  build:
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/uat' || github.ref == 'refs/heads/prod'}}
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build frontend code
        env:
          REACT_APP_BACKEND_BASE_URL: ${{ secrets.REACT_APP_BACKEND_BASE_URL }}
          REACT_APP_MAIN_HOST: ${{ secrets.REACT_APP_MAIN_HOST }}
        run: |
          npm install
          npm run build

      - name: Archive build artifact
        uses: actions/upload-artifact@v3
        with:
          name: crankbit-frontend-build
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    environment:
      name: ${{ github.ref_name }}
      url: ${{ vars.DNS_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: crankbit-frontend-build
          path: build

      - if: ${{ (github.event.inputs.environment == 'dev' || github.event_name == 'push') && github.ref == 'refs/heads/main' }}
        name: Deploy to Dev and invalidate Cloudfront distribution
        run: |
          aws s3 sync ./build s3://www.dev.crankbit.com
          aws cloudfront create-invalidation --distribution-id ${{ secrets.DEV_DISTRIBUTION_ID }} --paths "/*"

      - if: ${{ (github.event.inputs.environment == 'uat' || github.event_name == 'push') && github.ref == 'refs/heads/uat' }}
        name: Deploy to UAT
        run: |
          aws s3 sync ./build s3://www.uat.crankbit.com
          aws cloudfront create-invalidation --distribution-id ${{ secrets.UAT_DISTRIBUTION_ID }} --paths "/*"

      - if: ${{ (github.event.inputs.environment == 'prod' || github.event_name == 'push') && github.ref == 'refs/heads/prod' }}
        name: Deploy to Prod
        run: |
          aws s3 sync ./build s3://www.crankbit.com
          aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_DISTRIBUTION_ID }} --paths "/*"
